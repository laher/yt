<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on yt - a tool for yaml</title>
    <link>https://www.laher.net.nz/yt/posts/</link>
    <description>Recent content in Posts on yt - a tool for yaml</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 20 Oct 2018 03:39:23 +1300</lastBuildDate>
    
	<atom:link href="https://www.laher.net.nz/yt/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Introduction to yt Templating</title>
      <link>https://www.laher.net.nz/yt/posts/introduction-to-yt-templating/</link>
      <pubDate>Sat, 20 Oct 2018 03:39:23 +1300</pubDate>
      
      <guid>https://www.laher.net.nz/yt/posts/introduction-to-yt-templating/</guid>
      <description>yt uses Go&amp;rsquo;s text/template package for templating.
 The following is only a primer on Go Templates, adapted from Hugo&amp;rsquo;s documentation. For an in-depth look into Go Templates, check the official Go docs.
 Go Templates provide an extremely simple template language that adheres to the belief that only the most basic of logic belongs in the template or view layer.
Basic Syntax Go Templates are files with the addition of variables and functions.</description>
    </item>
    
  </channel>
</rss>